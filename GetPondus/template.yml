AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "A function to retrieve daily comics from VG.no and store them in S3 in case I forget to log in and read them."
Resources:
  pondusfunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: MyDailyPondus
      Description: "Simple python function that calls vg.no api's with a cookie value to retrieve daily comics."
      Handler: getpondus.lambda_handler
      Runtime: python3.8
      CodeUri: ./function.zip
      Timeout: 12
      Role: !GetAtt pondusrole.Arn
      Events:
        DailySchedule:
          Type: Schedule
          Properties:
            Schedule: cron(15 7 ? * * *)
            Name: MyDailyPondusSchedule
            Description: "Retrieves comics from VG.no on daily basis."
  pondusrole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: MyDailyPondusRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: PondusS3
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource:
                  - arn:aws:s3:::mclonberg-pondus/*
      Path: "/"
